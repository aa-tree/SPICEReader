CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       Written by: Anshuk Attri
C
C       Contact: contact@anshukattri.in
C       Website: www.anshukattri.in/research
C       GITHUB: github.com/aa-tree/
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC



      PROGRAM TESTENCKE
      IMPLICIT NONE

      INCLUDE '../../code/common.dat'

      INTEGER I, DIM_V
      REAL*8 IT, ET, FT, DET, LET, STATE(6), RSTATE(6)

      REAL*8 OSTATE_RHO(6), OSTATE_DELTAR(6), DELTASTATE_R(6)
      REAL*8 MOD_RHO_OUT, MOD_DELTAR_OUT

      INTEGER FREE_FP1, FREE_FP2
      INTEGER COUNTER_CORRECTION
      EXTERNAL XPP_TWOBODY_NO_PERT
      EXTERNAL DELTA_XPP_ENCKE


      CALL STARTSYS(3)
      CALL START_TWOBODYSYSTEM(399)

      CALL STR2ET ( '2019 JAN 31 01:00', ET )

      CALL SPKEZ ( 301, ET, 'J2000', 'NONE',3, STATE, LET )
      IT=ET
      WRITE(*,*) 'ET', ET

      DIM_V=6
      DET=86400.00D0
      FT= ET+(128000.0D0*86400.00D0)

      CALL GETLUN(FREE_FP1)
      CALL GETLUN(FREE_FP2)


      OPEN(FREE_FP1, FILE='out_RHO.dat')
      OPEN(FREE_FP2, FILE='out_R.dat')

      RSTATE=STATE

!      DO I=1,6
!        WRITE(*,*) RSTATE(I), STATE(I)
!      END DO
      COUNTER_CORRECTION=0
      DO WHILE(ET .LT. FT)

        CALL INTG_COMMON ('RK78', ET,DIM_V,STATE, DET,
     &XPP_TWOBODY_NO_PERT,OSTATE_RHO)


        CALL INTG_ENCKE ('RK78', ET, DIM_V, RSTATE, STATE, DET,
     &DELTA_XPP_ENCKE,OSTATE_DELTAR)


        ET=ET+DET


!     Check for the error, and select a new Osculating Orbit.



      CALL GET_VEC_MOD(OSTATE_RHO, MOD_RHO_OUT)
      CALL GET_VEC_MOD(OSTATE_DELTAR, MOD_DELTAR_OUT)

C      WRITE(*,*) 'RATIO', MOD_DELTAR_OUT/MOD_RHO_OUT, MOD_DELTAR_OUT, ET

        IF(MOD_DELTAR_OUT/MOD_RHO_OUT .GT. 0.0001D0) THEN
          COUNTER_CORRECTION=COUNTER_CORRECTION+1
          WRITE(*,*) 'Orbit too far (AT TIME):', ET, COUNTER_CORRECTION
          RSTATE=OSTATE_RHO
          STATE=OSTATE_RHO

        ELSE


        RSTATE=OSTATE_DELTAR+OSTATE_RHO
        STATE=OSTATE_RHO

        END IF


      WRITE(FREE_FP1,*) ET, (OSTATE_RHO(I),I=1,6)
      WRITE(FREE_FP2,*) ET, (RSTATE(I),I=1,6)






      END DO

      CLOSE(FREE_FP1)
      CLOSE(FREE_FP2)



      RETURN
      END PROGRAM
